---
import { getCollection, type CollectionEntry } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';

// Export getStaticPaths so Astro can statically generate pages for each roast-ride-read post.
export async function getStaticPaths() {
  const posts = await getCollection('roast-ride-read');
  return posts.map((post) => ({
    // Use "id" instead of "slug"
    params: { slug: post.id }
  }));
}

const { slug } = Astro.params as { slug: string };
const posts = await getCollection('roast-ride-read');
const post = posts.find((p) => p.id === slug) as CollectionEntry<'roast-ride-read'>;

if (!post) {
  throw new Error(`Post not found for slug: ${slug}`);
}
---
<BaseLayout>
  <article>
    <h1>{post.data.title}</h1>
    <time datetime={post.data.date}>{post.data.date}</time>
    <div style="margin-top: 16px;">
      <pre>{post.body}</pre>
    </div>
  </article>
</BaseLayout>
